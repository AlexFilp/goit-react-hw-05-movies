{"version":3,"file":"static/js/729.7aee2791.chunk.js","mappings":"mTAEMA,EAAU,mCAMT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,uCAA0CF,IAD5D,cACCG,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBL,EAAAA,EAAAA,IAAA,+BACGF,EADH,kBACoBO,IAFtC,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAqCT,IADvD,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA6BD,GAA7B,uFACkBP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACcT,IAFhC,cACCG,EADD,yBAIEA,EAASC,KAAKO,MAJhB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,uFACkBP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACcT,IAFhC,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAzBPH,EAAAA,EAAAA,SAAAA,QAFiB,+B,+GCFJW,EAAOC,EAAAA,GAAAA,GAAH,6FAMJC,EAAUD,EAAAA,GAAAA,EAAH,sFAMPE,EAAOF,EAAAA,GAAAA,IAAH,gJ,SCRJG,EAAsB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5C,OACE,UAACN,EAAD,YACE,qCAAaK,MACb,SAACH,EAAD,UAAUI,KACV,SAACH,EAAD,MAGL,E,wCCZYI,EAAON,EAAAA,GAAAA,EAAH,6GAOJO,EAAcP,EAAAA,GAAAA,GAAH,wGC8BxB,EAhCgB,WACd,OAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,IAAiBa,GAASK,MAAK,SAAA1B,GAC7B2B,QAAQC,IAAI5B,GACZoB,EAAWpB,GACXwB,GAAW,EACZ,GACF,GAAE,CAACH,KAGF,gCACGE,IAAW,SAACM,EAAA,EAAD,IAEVN,GAA8B,IAAnBJ,EAAQW,QAGnB,SAACb,EAAD,UACGE,EAAQY,KAAI,YAA8B,IAA3BjB,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASiB,EAAS,EAATA,GAC/B,OACE,SAACnB,EAAD,CAA8BC,OAAQA,EAAQC,QAASA,GAA7BiB,EAE7B,OAPH,SAAChB,EAAD,wDAYP,C","sources":["FilmService.js","components/FilmReviewsListItem/FilmReviewsListItem.styled.js","components/FilmReviewsListItem/FilmReviewsListItem.jsx","Pages/Reviews/Reviews.styled.js","Pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5f00324c3530ad02b76dbaa7a82cb337';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function fetchTrendMovies() {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchOnSearch(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchFilmDetails(filmId) {\n  const response = await axios.get(`movie/${filmId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchFilmCast(filmId) {\n  const response = await axios.get(\n    `movie/${filmId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\nexport async function fetchFilmReviews(filmId) {\n  const response = await axios.get(\n    `movie/${filmId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding-left: 10px;\n  padding-right: 10px;\n  max-width: 1300px;\n`;\n\nexport const Comment = styled.p`\n  margin-top: 10px;\n  font-size: 15px;\n  font-weight: 500;\n`;\n\nexport const Line = styled.div`\n  margin-top: 10px;\n  width: 400px;\n  height: 4px;\n  background-color: rgba(6, 24, 44, 0.4);\n  border-radius: 4px;\n`;\n","import {\n  Item,\n  Comment,\n  Line,\n} from 'components/FilmReviewsListItem/FilmReviewsListItem.styled';\n\nexport const FilmReviewsListItem = ({ author, content }) => {\n  return (\n    <Item>\n      <h3>Author: {author}</h3>\n      <Comment>{content}</Comment>\n      <Line></Line>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  margin-top: 15px;\n  text-align: center;\n  font-size: 25px;\n  font-weight: 500;\n`;\n\nexport const ReviewsList = styled.ul`\n  margin-top: 25px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import { FilmReviewsListItem } from 'components/FilmReviewsListItem/FilmReviewsListItem';\nimport { PageLoading } from 'components/PageLoading/PageLoading';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchFilmReviews } from '../../FilmService';\nimport { Text, ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [loading, SetLoading] = useState(true);\n\n  useEffect(() => {\n    fetchFilmReviews(movieId).then(data => {\n      console.log(data);\n      setReviews(data);\n      SetLoading(false);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <PageLoading />}\n\n      {!loading && reviews.length === 0 ? (\n        <Text>We dont have any review for this movie.</Text>\n      ) : (\n        <ReviewsList>\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <FilmReviewsListItem key={id} author={author} content={content} />\n            );\n          })}\n        </ReviewsList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","fetchTrendMovies","axios","response","data","results","fetchOnSearch","query","fetchFilmDetails","filmId","fetchFilmCast","cast","fetchFilmReviews","Item","styled","Comment","Line","FilmReviewsListItem","author","content","Text","ReviewsList","useState","reviews","setReviews","movieId","useParams","loading","SetLoading","useEffect","then","console","log","PageLoading","length","map","id"],"sourceRoot":""}