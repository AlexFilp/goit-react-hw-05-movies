{"version":3,"file":"static/js/961.7ce0c47a.chunk.js","mappings":"mTAEMA,EAAU,mCAMT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,uCAA0CF,IAD5D,cACCG,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBL,EAAAA,EAAAA,IAAA,+BACGF,EADH,kBACoBO,IAFtC,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAqCT,IADvD,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA6BD,GAA7B,uFACkBP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACcT,IAFhC,cACCG,EADD,yBAIEA,EAASC,KAAKO,MAJhB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,uFACkBP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACcT,IAFhC,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAzBPH,EAAAA,EAAAA,SAAAA,QAFiB,+B,+HCFJW,EAAOC,EAAAA,GAAAA,GAAH,iIAOJC,EAAWD,EAAAA,GAAAA,IAAH,oEAKRE,EAAMF,EAAAA,GAAAA,IAAH,2DAKHG,EAAgBH,EAAAA,GAAAA,IAAH,qKAUbI,EAAOJ,EAAAA,GAAAA,EAAH,iEAKJK,EAAYL,EAAAA,GAAAA,EAAH,iE,SCxBTM,EAAqB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAC9CC,EAAU,yCAAqCD,GAErD,OACE,UAACV,EAAD,YACE,SAACE,EAAD,WACE,SAACC,EAAD,CAAKS,IAAKF,EAAaC,EAAaE,EAAUC,IAAI,GAAGC,MAAM,WAG7D,UAACX,EAAD,YACE,SAACC,EAAD,UAAOI,KACP,UAACH,EAAD,yBAC4B,KAAdE,EAAmB,UAAYA,UAKpD,E,wCCzBYQ,EAAOf,EAAAA,GAAAA,EAAH,6GAOJgB,EAAahB,EAAAA,GAAAA,GAAH,qJCkCvB,EApCa,WACX,OAA4BiB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACR5B,EAAAA,EAAAA,IAAcwB,GAASK,MAAK,SAAAnC,GAC1BoC,QAAQC,IAAIrC,GACZ6B,EAAU7B,GACViC,GAAW,EACZ,GACF,GAAE,CAACH,KAGF,gCACGE,IAAW,SAACM,EAAA,EAAD,IACVN,GAA6B,IAAlBJ,EAAOW,QAGlB,SAACb,EAAD,UACGE,EAAOY,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASxB,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMwB,EAAmB,EAAnBA,aACvC,OACE,SAAC1B,EAAD,CAEEC,UAAWA,EACXC,KAAMA,EACNC,WAAYuB,GAHPD,EAMV,OAZH,SAAChB,EAAD,4DAiBP,C","sources":["FilmService.js","components/FilmActorsListItem/FilmActorslistItem.styled.js","components/FilmActorsListItem/FilmActorsListItem.jsx","Pages/Cast/Cast.styled.js","Pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5f00324c3530ad02b76dbaa7a82cb337';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function fetchTrendMovies() {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchOnSearch(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchFilmDetails(filmId) {\n  const response = await axios.get(`movie/${filmId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchFilmCast(filmId) {\n  const response = await axios.get(\n    `movie/${filmId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\nexport async function fetchFilmReviews(filmId) {\n  const response = await axios.get(\n    `movie/${filmId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  width: 250px;\n  height: auto;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  border-radius: 5px;\n`;\n\nexport const ImgThumb = styled.div`\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const Img = styled.img`\n  width: 250px;\n  height: 375px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-top: 5px;\n  height: 70px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding-left: 7px;\n  padding-bottom: 7px;\n`;\n\nexport const Name = styled.p`\n  font-size: 17px;\n  font-weight: 500;\n`;\n\nexport const Character = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n`;\n","import actorImg from '../../image/actor.jpg';\nimport {\n  Item,\n  ImgThumb,\n  Img,\n  InfoContainer,\n  Name,\n  Character,\n} from './FilmActorslistItem.styled';\n\nexport const FilmActorslistItem = ({ character, name, profileImg }) => {\n  const baseImgUrl = `https://image.tmdb.org/t/p/w500${profileImg}`;\n\n  return (\n    <Item>\n      <ImgThumb>\n        <Img src={profileImg ? baseImgUrl : actorImg} alt=\"\" width=\"200\" />\n      </ImgThumb>\n\n      <InfoContainer>\n        <Name>{name}</Name>\n        <Character>\n          Character: {character === '' ? 'No info' : character}\n        </Character>\n      </InfoContainer>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  margin-top: 15px;\n  text-align: center;\n  font-size: 25px;\n  font-weight: 500;\n`;\n\nexport const ActorsList = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  flex-wrap: wrap;\n`;\n","import { FilmActorslistItem } from 'components/FilmActorsListItem/FilmActorsListItem';\nimport { PageLoading } from 'components/PageLoading/PageLoading';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchFilmCast } from '../../FilmService';\nimport { Text, ActorsList } from './Cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n  const [loading, SetLoading] = useState(true);\n\n  useEffect(() => {\n    fetchFilmCast(movieId).then(data => {\n      console.log(data);\n      setActors(data);\n      SetLoading(false);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <PageLoading />}\n      {!loading && actors.length === 0 ? (\n        <Text>Cant find the actors for this movie. Sorry.</Text>\n      ) : (\n        <ActorsList>\n          {actors.map(({ cast_id, character, name, profile_path }) => {\n            return (\n              <FilmActorslistItem\n                key={cast_id}\n                character={character}\n                name={name}\n                profileImg={profile_path}\n              />\n            );\n          })}\n        </ActorsList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","fetchTrendMovies","axios","response","data","results","fetchOnSearch","query","fetchFilmDetails","filmId","fetchFilmCast","cast","fetchFilmReviews","Item","styled","ImgThumb","Img","InfoContainer","Name","Character","FilmActorslistItem","character","name","profileImg","baseImgUrl","src","actorImg","alt","width","Text","ActorsList","useState","actors","setActors","movieId","useParams","loading","SetLoading","useEffect","then","console","log","PageLoading","length","map","cast_id","profile_path"],"sourceRoot":""}