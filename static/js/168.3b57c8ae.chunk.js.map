{"version":3,"file":"static/js/168.3b57c8ae.chunk.js","mappings":"mTAEMA,EAAU,mCAMT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,uCAA0CF,IAD5D,cACCG,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBL,EAAAA,EAAAA,IAAA,+BACGF,EADH,kBACoBO,IAFtC,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAqCT,IADvD,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA6BD,GAA7B,uFACkBP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACcT,IAFhC,cACCG,EADD,yBAIEA,EAASC,KAAKO,MAJhB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,uFACkBP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACcT,IAFhC,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAzBPH,EAAAA,EAAAA,SAAAA,QAFiB,+B,kMCDJW,EAAOC,EAAAA,GAAAA,KAAH,8CAIJC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mZAUN,SAAAG,GAAE,OAAIA,EAAGC,MAAMC,SAAb,IACI,SAAAF,GAAE,OAAIA,EAAGC,MAAME,UAAb,IACR,SAAAH,GAAE,OAAIA,EAAGC,MAAME,UAAb,IASL,SAAAH,GAAE,OAAIA,EAAGC,MAAMG,MAAMC,WAAnB,IAKFC,EAAYT,EAAAA,GAAAA,IAAH,0NAKN,SAAAG,GAAE,OAAIA,EAAGC,MAAMC,SAAb,IACI,SAAAF,GAAE,OAAIA,EAAGC,MAAME,UAAb,IACR,SAAAH,GAAE,OAAIA,EAAGC,MAAME,UAAb,IAKLI,EAAeV,EAAAA,GAAAA,IAAH,oEAKZW,EAAMX,EAAAA,GAAAA,IAAH,0CAIHY,EAAgBZ,EAAAA,GAAAA,IAAH,2DAKba,EAAWb,EAAAA,GAAAA,GAAH,4CAIRc,EAAYd,EAAAA,GAAAA,EAAH,sFAMTe,EAAWf,EAAAA,GAAAA,GAAH,iEAKRgB,EAAOhB,EAAAA,GAAAA,EAAH,6HAQJiB,EAASjB,EAAAA,GAAAA,GAAH,iEAKNkB,EAAalB,EAAAA,GAAAA,EAAH,sFAMVmB,EAAoBnB,EAAAA,GAAAA,IAAH,+KAOjBoB,EAAYpB,EAAAA,GAAAA,GAAH,oEAKTqB,EAAWrB,EAAAA,GAAAA,GAAH,yGAORsB,EAAWtB,EAAAA,GAAAA,GAAH,sBAERuB,GAAWvB,EAAAA,EAAAA,IAAOwB,EAAAA,GAAPxB,CAAH,2JAIC,SAAAG,GAAE,OAAIA,EAAGC,MAAME,UAAb,IAKX,SAAAH,GAAE,OAAIA,EAAGC,MAAMG,MAAMC,WAAnB,I,mBCJf,EA7FqB,WAAO,IAAD,MACzB,GAAwBiB,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAW7C,GAVAC,QAAQC,IAAR,UAAYN,EAASG,aAArB,aAAY,EAAgBC,OAE5BG,EAAAA,EAAAA,YAAU,YACR7C,EAAAA,EAAAA,IAAiBoC,GAASU,MAAK,SAAAd,GAC7BW,QAAQC,IAAIZ,GACZC,EAAQD,GACRG,GAAW,EACZ,GACF,GAAE,CAACC,IAECJ,EAAL,CAQA,IAAQe,EACNf,EADMe,MAAOC,EACbhB,EADagB,aAAcC,EAC3BjB,EAD2BiB,YAAaC,EACxClB,EADwCkB,aAAcC,EACtDnB,EADsDmB,SAAUC,EAChEpB,EADgEoB,OAG5DC,EAAU,yCAAqCJ,GAErD,OACE,UAAC5C,EAAD,YACE,UAACE,EAAD,CAAW+C,GAAId,EAAf,WACE,SAAC,MAAD,IADF,aAICN,IAAW,SAACqB,EAAA,EAAD,KAEVrB,IACA,4BACE,UAACnB,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEuC,IAAKP,EAAcI,EAAaI,EAChCC,IAAI,GACJC,MAAM,WAGV,UAACzC,EAAD,YACE,UAACC,EAAD,WACG4B,EAAO,IACU,KAAjBC,GAAwBA,EAAxB,WAEOA,EAAaY,MAAM,EAAG,GAF7B,KACG,cAGN,UAACxC,EAAD,0BACiD,GAAlCyC,OAAOX,GAAcY,QAAQ,GAD5C,QAGA,SAACzC,EAAD,wBACA,SAACC,EAAD,UAAoB,KAAb6B,EAAkB,cAAgBA,KACzC,SAAC5B,EAAD,sBACA,SAACC,EAAD,UACqB,IAAlB4B,EAAOW,OAAP,UACMX,EAAOY,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAD3C,KAEG,qBAIV,UAAC1C,EAAD,WACG,KACD,SAACC,EAAD,qCACA,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAUyB,GAAI,OAAQb,MAAO,CAAEC,KAAMF,GAArC,qBAIF,SAACZ,EAAD,WACE,SAACC,EAAD,CAAUyB,GAAI,UAAWb,MAAO,CAAEC,KAAMF,GAAxC,iCASV,SAAC,EAAA4B,SAAD,CAAUC,UAAU,SAACd,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QArEL,CAyEF,C","sources":["FilmService.js","Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5f00324c3530ad02b76dbaa7a82cb337';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function fetchTrendMovies() {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchOnSearch(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchFilmDetails(filmId) {\n  const response = await axios.get(`movie/${filmId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchFilmCast(filmId) {\n  const response = await axios.get(\n    `movie/${filmId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\nexport async function fetchFilmReviews(filmId) {\n  const response = await axios.get(\n    `movie/${filmId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n","import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const Main = styled.main`\n  padding-top: 25px;\n`;\n\nexport const GoBackBtn = styled(Link)`\n  display: flex;\n  margin: 0 auto;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  font-size: 22px;\n  width: 150px;\n  height: 35px;\n  border-radius: 4px;\n  box-shadow: ${pr => pr.theme.boxShadow};\n  transition: color ${pr => pr.theme.transition},\n    transform ${pr => pr.theme.transition};\n\n  & > svg {\n    width: 25px;\n    height: 25px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${pr => pr.theme.color.accentColor};\n    transform: scale(1.1);\n  }\n`;\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  box-shadow: ${pr => pr.theme.boxShadow};\n  transition: color ${pr => pr.theme.transition},\n    transform ${pr => pr.theme.transition};\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n\nexport const ImgContainer = styled.div`\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const Img = styled.img`\n  height: 450px;\n`;\n\nexport const InfoContainer = styled.div`\n  width: 500px;\n  padding: 10px;\n`;\n\nexport const FilmName = styled.h2`\n  font-size: 35px;\n`;\n\nexport const UserScore = styled.p`\n  margin-top: 10px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const Overview = styled.h3`\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport const Text = styled.p`\n  width: 500px;\n  margin-top: 10px;\n  font-weight: 500;\n  font-size: 17px;\n  text-align: start;\n`;\n\nexport const Genres = styled.h3`\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport const GenresList = styled.p`\n  margin-top: 10px;\n  font-size: 17px;\n  font-weight: 500;\n`;\n\nexport const MoreInfoContainer = styled.div`\n  margin-top: 20px;\n  box-shadow: rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n  padding-bottom: 10px;\n`;\n\nexport const InfoTitle = styled.h2`\n  margin-top: 10px;\n  text-align: center;\n`;\n\nexport const InfoList = styled.ul`\n  margin-top: 10px;\n  display: flex;\n  gap: 25px;\n  justify-content: center;\n`;\n\nexport const InfoItem = styled.li``;\n\nexport const InfoLink = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 500;\n\n  transition: color ${pr => pr.theme.transition};\n\n  &:hover,\n  &:focus,\n  &.active {\n    color: ${pr => pr.theme.color.accentColor};\n  }\n`;\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport movieImg from '../../image/movie.jpg';\nimport { fetchFilmDetails } from '../../FilmService';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport {\n  Container,\n  Main,\n  InfoContainer,\n  GoBackBtn,\n  ImgContainer,\n  FilmName,\n  UserScore,\n  Overview,\n  Text,\n  Genres,\n  GenresList,\n  InfoTitle,\n  InfoList,\n  MoreInfoContainer,\n  InfoItem,\n  InfoLink,\n  Img,\n} from './MovieDetails.styled';\nimport { PageLoading } from 'components/PageLoading/PageLoading';\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState({});\n  const [loading, setLoading] = useState(true);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  console.log(location.state?.from);\n\n  useEffect(() => {\n    fetchFilmDetails(movieId).then(film => {\n      console.log(film);\n      setFilm(film);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  if (!film) {\n    return;\n  }\n\n  // const loadFilmInfo = newData => {\n  //   setFilm(newData);\n  // };\n\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n    film;\n\n  const baseImgUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  return (\n    <Main>\n      <GoBackBtn to={backLinkHref}>\n        <BsArrowLeft />\n        Go back\n      </GoBackBtn>\n      {loading && <PageLoading />}\n\n      {!loading && (\n        <div>\n          <Container>\n            <ImgContainer>\n              <Img\n                src={poster_path ? baseImgUrl : movieImg}\n                alt=\"\"\n                width=\"300\"\n              />\n            </ImgContainer>\n            <InfoContainer>\n              <FilmName>\n                {title}{' '}\n                {release_date === '' || !release_date\n                  ? 'No date'\n                  : `(${release_date.slice(0, 4)})`}\n              </FilmName>\n              <UserScore>\n                User Score: {Number(vote_average).toFixed(1) * 10}%\n              </UserScore>\n              <Overview>Overview</Overview>\n              <Text>{overview === '' ? 'No overview' : overview}</Text>\n              <Genres>Genres</Genres>\n              <GenresList>\n                {genres.length !== 0\n                  ? `${genres.map(genre => genre.name).join(', ')}.`\n                  : 'No genres'}\n              </GenresList>\n            </InfoContainer>\n          </Container>\n          <MoreInfoContainer>\n            {' '}\n            <InfoTitle>Aditional information</InfoTitle>\n            <InfoList>\n              <InfoItem>\n                <InfoLink to={'cast'} state={{ from: backLinkHref }}>\n                  Cast\n                </InfoLink>\n              </InfoItem>\n              <InfoItem>\n                <InfoLink to={'reviews'} state={{ from: backLinkHref }}>\n                  Reviews\n                </InfoLink>\n              </InfoItem>\n            </InfoList>\n          </MoreInfoContainer>\n        </div>\n      )}\n\n      <Suspense fallback={<PageLoading />}>\n        <Outlet />\n      </Suspense>\n    </Main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","fetchTrendMovies","axios","response","data","results","fetchOnSearch","query","fetchFilmDetails","filmId","fetchFilmCast","cast","fetchFilmReviews","Main","styled","GoBackBtn","Link","pr","theme","boxShadow","transition","color","accentColor","Container","ImgContainer","Img","InfoContainer","FilmName","UserScore","Overview","Text","Genres","GenresList","MoreInfoContainer","InfoTitle","InfoList","InfoItem","InfoLink","NavLink","useState","film","setFilm","loading","setLoading","movieId","useParams","location","useLocation","backLinkHref","state","from","console","log","useEffect","then","title","release_date","poster_path","vote_average","overview","genres","baseImgUrl","to","PageLoading","src","movieImg","alt","width","slice","Number","toFixed","length","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}