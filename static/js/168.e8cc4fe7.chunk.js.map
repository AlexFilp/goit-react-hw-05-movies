{"version":3,"file":"static/js/168.e8cc4fe7.chunk.js","mappings":"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","sources":["FilmService.js","Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export class FilmService {\n  #BASE_URL = 'https://api.themoviedb.org/3/';\n\n  #API_KEY = '5f00324c3530ad02b76dbaa7a82cb337';\n\n  #typeRequest = {\n    trends: 'trending/movie/week',\n    search: 'search/movie',\n    movieId: 'movie/',\n    genres: 'genre/movie/list',\n  };\n\n  #filmInfo = {\n    credits: '/credits',\n    reviews: '/reviews',\n  };\n\n  getUrl(type) {\n    return `${this.#BASE_URL}${this.#typeRequest[type]}?api_key=${\n      this.#API_KEY\n    }`;\n  }\n\n  getUrlSearch(type, query) {\n    return `${this.#BASE_URL}${this.#typeRequest[type]}?api_key=${\n      this.#API_KEY\n    }&query=${query}`;\n  }\n\n  getUrlById(type, id) {\n    return `${this.#BASE_URL}${this.#typeRequest[type]}${id}?api_key=${\n      this.#API_KEY\n    }`;\n  }\n\n  getUrlForInfo(type, id, info) {\n    return `${this.#BASE_URL}${this.#typeRequest[type]}${id}${\n      this.#filmInfo[info]\n    }?api_key=${this.#API_KEY}`;\n  }\n\n  fetchFilmsOrGenres(type) {\n    try {\n      return fetch(this.getUrl(type)).then(response => response.json());\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  fetchFilmsOnSearch(type, query) {\n    try {\n      return fetch(this.getUrlSearch(type, query)).then(response =>\n        response.json()\n      );\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  fetchFilmById(type, id) {\n    try {\n      return fetch(this.getUrlById(type, id)).then(response => response.json());\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  fetchFilmInfo(type, id, info) {\n    try {\n      return fetch(this.getUrlForInfo(type, id, info)).then(response =>\n        response.json()\n      );\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Main = styled.main`\n  padding-top: 25px;\n`;\n\nexport const GoBackBtn = styled(Link)`\n  display: flex;\n  margin: 0 auto;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  font-size: 22px;\n  width: 150px;\n  height: 35px;\n  border-radius: 4px;\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n    rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n  transition: color 200ms ease-in, transform 200ms ease-in;\n\n  & > svg {\n    width: 25px;\n    height: 25px;\n  }\n\n  &:hover,\n  &:focus {\n    color: red;\n    transform: scale(1.1);\n  }\n`;\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n    rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n  transition: color 200ms ease-in, transform 200ms ease-in;\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n\nexport const ImgContainer = styled.div`\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const Img = styled.img`\n  height: 450px;\n`;\n\nexport const InfoContainer = styled.div`\n  width: 500px;\n  padding: 10px;\n`;\n\nexport const FilmName = styled.h2`\n  font-size: 35px;\n`;\n\nexport const UserScore = styled.p`\n  margin-top: 10px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const Overview = styled.h3`\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport const Text = styled.p`\n  width: 500px;\n  margin-top: 10px;\n  font-weight: 500;\n  font-size: 17px;\n  text-align: start;\n`;\n\nexport const Genres = styled.h3`\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport const GenresList = styled.p`\n  margin-top: 10px;\n  font-size: 17px;\n  font-weight: 500;\n`;\n\nexport const MoreInfoContainer = styled.div`\n  margin-top: 20px;\n  box-shadow: rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n  padding-bottom: 10px;\n`;\n\nexport const InfoTitle = styled.h2`\n  margin-top: 10px;\n  text-align: center;\n`;\n\nexport const InfoList = styled.ul`\n  margin-top: 10px;\n  display: flex;\n  gap: 25px;\n  justify-content: center;\n`;\n\nexport const InfoItem = styled.li``;\n\nexport const InfoLink = styled(Link)`\n  font-size: 20px;\n  font-weight: 500;\n\n  transition: color 200ms ease-in;\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: red;\n  }\n`;\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport movieImg from '../../image/movie.jpg';\nimport { FilmService } from '../../FilmService';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport {\n  Container,\n  Main,\n  InfoContainer,\n  GoBackBtn,\n  ImgContainer,\n  FilmName,\n  UserScore,\n  Overview,\n  Text,\n  Genres,\n  GenresList,\n  InfoTitle,\n  InfoList,\n  MoreInfoContainer,\n  InfoItem,\n  InfoLink,\n  Img,\n} from './MovieDetails.styled';\nimport { PageLoading } from 'components/PageLoading/PageLoading';\n\nconst filmservice = new FilmService();\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState({});\n  const [loading, setLoading] = useState(true);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  console.log(location.state?.from);\n\n  useEffect(() => {\n    filmservice.fetchFilmById('movieId', movieId).then(film => {\n      console.log(film);\n      setLoading(false);\n      loadFilmInfo(film);\n    });\n  }, [movieId]);\n\n  const loadFilmInfo = newData => {\n    setFilm(newData);\n  };\n\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n    film;\n\n  const baseImgUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  return (\n    <Main>\n      <GoBackBtn to={backLinkHref}>\n        <BsArrowLeft />\n        Go back\n      </GoBackBtn>\n      {loading && <PageLoading />}\n\n      {!loading && (\n        <div>\n          <Container>\n            <ImgContainer>\n              <Img\n                src={poster_path ? baseImgUrl : movieImg}\n                alt=\"\"\n                width=\"300\"\n              />\n            </ImgContainer>\n            <InfoContainer>\n              <FilmName>\n                {title}{' '}\n                {release_date === '' || !release_date\n                  ? 'No date'\n                  : `(${release_date.slice(0, 4)})`}\n              </FilmName>\n              <UserScore>\n                User Score: {Number(vote_average).toFixed(1) * 10}%\n              </UserScore>\n              <Overview>Overview</Overview>\n              <Text>{overview === '' ? 'No overview' : overview}</Text>\n              <Genres>Genres</Genres>\n              <GenresList>\n                {genres.length !== 0\n                  ? `${genres.map(genre => genre.name).join(', ')}.`\n                  : 'No genres'}\n              </GenresList>\n            </InfoContainer>\n          </Container>\n          <MoreInfoContainer>\n            {' '}\n            <InfoTitle>Aditional information</InfoTitle>\n            <InfoList>\n              <InfoItem>\n                <InfoLink to={'cast'}>Cast</InfoLink>\n              </InfoItem>\n              <InfoItem>\n                <InfoLink to={'reviews'}>Reviews</InfoLink>\n              </InfoItem>\n            </InfoList>\n          </MoreInfoContainer>\n        </div>\n      )}\n\n      <Suspense fallback={<PageLoading />}>\n        <Outlet />\n      </Suspense>\n    </Main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["FilmService","trends","search","movieId","genres","credits","reviews","type","this","query","id","info","fetch","getUrl","then","response","json","error","console","log","message","getUrlSearch","getUrlById","getUrlForInfo","Main","styled","GoBackBtn","Link","Container","ImgContainer","Img","InfoContainer","FilmName","UserScore","Overview","Text","Genres","GenresList","MoreInfoContainer","InfoTitle","InfoList","InfoItem","InfoLink","filmservice","useState","film","setFilm","loading","setLoading","useParams","location","useLocation","backLinkHref","state","from","useEffect","fetchFilmById","loadFilmInfo","newData","title","release_date","poster_path","vote_average","overview","baseImgUrl","to","PageLoading","src","movieImg","alt","width","slice","Number","toFixed","length","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}