{"version":3,"file":"static/js/463.60a87b2f.chunk.js","mappings":"6SAAaA,EAAb,wFACc,kCADd,gDAGa,qCAHb,gDAKiB,CACbC,OAAQ,sBACRC,OAAQ,eACRC,QAAS,SACTC,OAAQ,sBATZ,gDAYc,CACVC,QAAS,WACTC,QAAS,aAdb,sCAiBE,SAAOC,GACL,MAAM,GAAN,eAAUC,KAAV,eAA2B,OAAAA,KAAA,MAAkBD,GAA7C,4BACEC,KADF,MAGD,GArBH,0BAuBE,SAAaD,EAAME,GACjB,MAAM,GAAN,eAAUD,KAAV,eAA2B,OAAAA,KAAA,MAAkBD,GAA7C,4BACEC,KADF,wBAEUC,EACX,GA3BH,wBA6BE,SAAWF,EAAMG,GACf,MAAM,GAAN,eAAUF,KAAV,eAA2B,OAAAA,KAAA,MAAkBD,IAA7C,OAAqDG,EAArD,4BACEF,KADF,MAGD,GAjCH,2BAmCE,SAAcD,EAAMG,EAAIC,GACtB,MAAM,GAAN,eAAUH,KAAV,eAA2B,OAAAA,KAAA,MAAkBD,IAA7C,OAAqDG,GAArD,QACE,OAAAF,KAAA,MAAeG,GADjB,4BAEYH,KAFZ,MAGD,GAvCH,gCAyCE,SAAmBD,GACjB,IACE,OAAOK,MAAMJ,KAAKK,OAAON,IAAOO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAG9C,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GA/CH,gCAiDE,SAAmBb,EAAME,GACvB,IACE,OAAOG,MAAMJ,KAAKa,aAAad,EAAME,IAAQK,MAAK,SAAAC,GAAQ,OACxDA,EAASC,MAD+C,GAK3D,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAzDH,2BA2DE,SAAcb,EAAMG,GAClB,IACE,OAAOE,MAAMJ,KAAKc,WAAWf,EAAMG,IAAKI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAGtD,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAjEH,2BAmEE,SAAcb,EAAMG,EAAIC,GACtB,IACE,OAAOC,MAAMJ,KAAKe,cAAchB,EAAMG,EAAIC,IAAOG,MAAK,SAAAC,GAAQ,OAC5DA,EAASC,MADmD,GAK/D,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,KA3EH,I,uICGaI,EAAOC,EAAAA,GAAAA,GAAH,seAuBJC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,kF,SCxBTG,EAAuB,SAAC,GAAmC,IAAjClB,EAAgC,EAAhCA,GAAImB,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAKvD,OACE,SAACP,EAAD,WACE,SAACE,EAAD,CAAWM,GAAE,UAAKtB,GAAMoB,MAAOA,EAAOC,QANtB,WAClBA,EAAQD,EACT,EAIG,SACGD,KAIR,E,UCZYI,EAAOR,EAAAA,GAAAA,KAAH,oFAMJS,EAAQT,EAAAA,GAAAA,MAAH,iPAeLU,EAAMV,EAAAA,GAAAA,OAAH,oc,UCnBHW,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAO7B,EAAP,KAAc8B,EAAd,KAgBA,OACE,UAACN,EAAD,CAAMI,SAXe,SAAAG,GAGrB,GAFAA,EAAIC,iBAEiB,KAAjBhC,EAAMiC,OACR,OAAOC,EAAAA,GAAAA,MAAY,2BAErBN,EAAS5B,GACT8B,EAAS,GACV,EAGC,WACE,SAACL,EAAD,CACEU,SAjBiB,SAAAJ,GACrBD,EAASC,EAAIK,OAAOC,MACrB,EAgBKC,KAAK,QACLD,MAAOrC,EACPF,KAAK,OACLyC,aAAa,MACbC,YAAY,eAEd,SAACd,EAAD,CAAK5B,KAAK,SAAV,sBAGL,E,oBChCY2C,EAAOzB,EAAAA,GAAAA,KAAH,0CAIJ0B,EAAO1B,EAAAA,GAAAA,GAAH,6C,UCGX2B,EAAc,IAAIpD,EAAAA,EA0DxB,EAxDe,SAAC,GAAiB,IAAD,EAAd+B,EAAc,EAAdA,QACVsB,GAAWC,EAAAA,EAAAA,MACjB,GAA8BhB,EAAAA,EAAAA,WAAS,GAAvC,eAAOiB,EAAP,KAAgBC,EAAhB,KACA,GAA0BlB,EAAAA,EAAAA,UAAS,IAAnC,eAAOmB,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAO/CC,EAAAA,EAAAA,YAAU,WACU,KAAdF,IAGJJ,EAAS,IACTF,GAAW,GACXJ,EAAYa,mBAAmB,SAAUH,GAAWhD,MAAK,SAAAoD,GAEvD,GADAhD,QAAQC,IAAI+C,GACgB,IAAxBA,EAAKC,QAAQC,OAEf,OADAZ,GAAW,GACJb,EAAAA,GAAAA,MAAY,2BAErBzB,QAAQC,IAAI+C,GACZV,GAAW,GACXa,EAAUH,EACX,IACF,GAAE,CAACJ,IAEJ,IAAMO,EAAY,SAAAC,GAChBZ,GAAS,SAAAa,GAAS,wBAAQA,IAAR,OAAsBD,EAAQH,SAA9B,GACnB,EAED,OACE,UAACjB,EAAD,YACE,SAACd,EAAD,CAAWC,SA7BE,SAAA5B,GAEfoD,EAD6B,KAAVpD,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,IA2BI8C,IAAW,SAACiB,EAAA,EAAD,KACZ,SAACrB,EAAD,UACGM,EAAMgB,KAAI,YAAoB,IAAjB/D,EAAgB,EAAhBA,GAAImB,EAAY,EAAZA,MAChB,OACE,SAACD,EAAD,CAEElB,GAAIA,EACJmB,MAAOA,EACPE,QAASA,EACTD,MAAO,CAAE4C,KAAMrB,IAJV3C,EAOV,QAIR,C,uBCjEc,SAASiE,EAAuBC,EAAUC,GACvD,IAAKC,OAAOC,UAAUC,eAAeC,KAAKL,EAAUC,GAClD,MAAM,IAAIK,UAAU,kDAGtB,OAAON,CACT,C,sFCNA,IAAIlE,EAAK,EACM,SAASyE,EAAsBpC,GAC5C,MAAO,aAAerC,IAAO,IAAMqC,CACrC,C","sources":["FilmService.js","components/OnSearchFilmList/OnSearchFilmListItem.styled.js","components/OnSearchFilmList/OnSearchFilmListItem.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","Pages/Movies/Movies.styled.js","Pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js"],"sourcesContent":["export class FilmService {\n  #BASE_URL = 'https://api.themoviedb.org/3/';\n\n  #API_KEY = '5f00324c3530ad02b76dbaa7a82cb337';\n\n  #typeRequest = {\n    trends: 'trending/movie/week',\n    search: 'search/movie',\n    movieId: 'movie/',\n    genres: 'genre/movie/list',\n  };\n\n  #filmInfo = {\n    credits: '/credits',\n    reviews: '/reviews',\n  };\n\n  getUrl(type) {\n    return `${this.#BASE_URL}${this.#typeRequest[type]}?api_key=${\n      this.#API_KEY\n    }`;\n  }\n\n  getUrlSearch(type, query) {\n    return `${this.#BASE_URL}${this.#typeRequest[type]}?api_key=${\n      this.#API_KEY\n    }&query=${query}`;\n  }\n\n  getUrlById(type, id) {\n    return `${this.#BASE_URL}${this.#typeRequest[type]}${id}?api_key=${\n      this.#API_KEY\n    }`;\n  }\n\n  getUrlForInfo(type, id, info) {\n    return `${this.#BASE_URL}${this.#typeRequest[type]}${id}${\n      this.#filmInfo[info]\n    }?api_key=${this.#API_KEY}`;\n  }\n\n  fetchFilmsOrGenres(type) {\n    try {\n      return fetch(this.getUrl(type)).then(response => response.json());\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  fetchFilmsOnSearch(type, query) {\n    try {\n      return fetch(this.getUrlSearch(type, query)).then(response =>\n        response.json()\n      );\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  fetchFilmById(type, id) {\n    try {\n      return fetch(this.getUrlById(type, id)).then(response => response.json());\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  fetchFilmInfo(type, id, info) {\n    try {\n      return fetch(this.getUrlForInfo(type, id, info)).then(response =>\n        response.json()\n      );\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  margin: 0 auto;\n  font-size: 17px;\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n    rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n  height: 25px;\n  width: 500px;\n  border-radius: 5px;\n  text-align: center;\n  transition: transform 200ms ease-in, color 200ms ease-in;\n\n  &:not(:last-child) {\n    margin-bottom: 13px;\n  }\n\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    color: red;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: block;\n  width: inherit;\n  height: inherit;\n`;\n","import { Item, MovieLink } from './OnSearchFilmListItem.styled';\n\nexport const OnSearchFilmListItem = ({ id, title, state, onClick }) => {\n  const handleClick = () => {\n    onClick(state);\n  };\n\n  return (\n    <Item>\n      <MovieLink to={`${id}`} state={state} onClick={handleClick}>\n        {title}\n      </MovieLink>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 37px;\n  outline: none;\n  font-size: 20px;\n  padding-left: 10px;\n  padding-right: 10px;\n  border-radius: 4px;\n  border-color: black;\n\n  &:focus-within {\n    border-color: red;\n  }\n`;\n\nexport const Btn = styled.button`\n  border: none;\n  border-radius: 4px;\n  background-color: white;\n  color: black;\n  width: 70px;\n  font-size: 18px;\n  font-weight: 500;\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n    rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n  transition: color 200ms ease-in, transform 200ms ease-in;\n\n  &:hover,\n  &:focus {\n    color: red;\n    transform: scale(1.1);\n  }\n`;\n","import { useState } from 'react';\nimport { Btn, Form, Input } from './SearchBar.styled';\nimport { toast } from 'react-toastify';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onHandleChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  const onHandleSubmit = evt => {\n    evt.preventDefault();\n\n    if (query.trim() === '') {\n      return toast.error('Please write something!');\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <Form onSubmit={onHandleSubmit}>\n      <Input\n        onChange={onHandleChange}\n        name=\"query\"\n        value={query}\n        type=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"Film name\"\n      />\n      <Btn type=\"submit\">Search</Btn>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  padding: 25px;\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n`;\n","import { OnSearchFilmListItem } from 'components/OnSearchFilmList/OnSearchFilmListItem';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { FilmService } from '../../FilmService';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Main, List } from './Movies.styled';\nimport { PageLoading } from 'components/PageLoading/PageLoading';\nimport { toast } from 'react-toastify';\n\nconst filmServise = new FilmService();\n\nconst Movies = ({ onClick }) => {\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieName = searchParams.get('query') ?? '';\n\n  const onSubmit = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    setFilms([]);\n    setLoading(true);\n    filmServise.fetchFilmsOnSearch('search', movieName).then(data => {\n      console.log(data);\n      if (data.results.length === 0) {\n        setLoading(false);\n        return toast.error('There is no such films!');\n      }\n      console.log(data);\n      setLoading(false);\n      loadFilms(data);\n    });\n  }, [movieName]);\n\n  const loadFilms = newData => {\n    setFilms(prevState => [...prevState, ...newData.results]);\n  };\n\n  return (\n    <Main>\n      <SearchBar onSubmit={onSubmit} />\n      {loading && <PageLoading />}\n      <List>\n        {films.map(({ id, title }) => {\n          return (\n            <OnSearchFilmListItem\n              key={id}\n              id={id}\n              title={title}\n              onClick={onClick}\n              state={{ from: location }}\n            />\n          );\n        })}\n      </List>\n    </Main>\n  );\n};\n\nexport default Movies;\n","export default function _classPrivateFieldBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n\n  return receiver;\n}","var id = 0;\nexport default function _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}"],"names":["FilmService","trends","search","movieId","genres","credits","reviews","type","this","query","id","info","fetch","getUrl","then","response","json","error","console","log","message","getUrlSearch","getUrlById","getUrlForInfo","Item","styled","MovieLink","Link","OnSearchFilmListItem","title","state","onClick","to","Form","Input","Btn","SearchBar","onSubmit","useState","setQuery","evt","preventDefault","trim","toast","onChange","target","value","name","autoComplete","placeholder","Main","List","filmServise","location","useLocation","loading","setLoading","films","setFilms","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","fetchFilmsOnSearch","data","results","length","loadFilms","newData","prevState","PageLoading","map","from","_classPrivateFieldBase","receiver","privateKey","Object","prototype","hasOwnProperty","call","TypeError","_classPrivateFieldKey"],"sourceRoot":""}