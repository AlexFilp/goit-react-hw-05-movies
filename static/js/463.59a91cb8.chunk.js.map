{"version":3,"file":"static/js/463.59a91cb8.chunk.js","mappings":"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","sources":["FilmService.js","components/OnSearchFilmList/OnSearchFilmListItem.styled.js","components/OnSearchFilmList/OnSearchFilmListItem.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","Pages/Movies/Movies.styled.js","Pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5f00324c3530ad02b76dbaa7a82cb337';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function fetchTrendMovies() {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchOnSearch(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchFilmDetails(filmId) {\n  const response = await axios.get(`movie/${filmId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchFilmCast(filmId) {\n  const response = await axios.get(\n    `movie/${filmId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\nexport async function fetchFilmReviews(filmId) {\n  const response = await axios.get(\n    `movie/${filmId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  margin: 0 auto;\n  font-size: 17px;\n  box-shadow: ${pr => pr.theme.boxShadow};\n  height: 25px;\n  width: 500px;\n  border-radius: 5px;\n  text-align: center;\n  transition: transform ${pr => pr.theme.transition},\n    color ${pr => pr.theme.transition};\n\n  &:not(:last-child) {\n    margin-bottom: 13px;\n  }\n\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    color: ${pr => pr.theme.color.accentColor};\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: block;\n  width: inherit;\n  height: inherit;\n`;\n","import { Item, MovieLink } from './OnSearchFilmListItem.styled';\n\nexport const OnSearchFilmListItem = ({ id, title, state }) => {\n  return (\n    <Item>\n      <MovieLink to={`${id}`} state={state}>\n        {title}\n      </MovieLink>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 37px;\n  outline: none;\n  font-size: 20px;\n  padding-left: 10px;\n  padding-right: 10px;\n  border-radius: 4px;\n  border-color: black;\n\n  &:focus-within {\n    border-color: ${pr => pr.theme.color.accentColor};\n  }\n`;\n\nexport const Btn = styled.button`\n  border: none;\n  border-radius: 4px;\n  background-color: white;\n  color: black;\n  width: 70px;\n  font-size: 18px;\n  font-weight: 500;\n  box-shadow: ${pr => pr.theme.boxShadow};\n  transition: color ${pr => pr.theme.transition},\n    transform ${pr => pr.theme.transition};\n\n  &:hover,\n  &:focus {\n    color: ${pr => pr.theme.color.accentColor};\n    transform: scale(1.1);\n  }\n`;\n","import { useState } from 'react';\nimport { Btn, Form, Input } from './SearchBar.styled';\nimport { toast } from 'react-toastify';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onHandleChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  const onHandleSubmit = evt => {\n    evt.preventDefault();\n\n    if (query.trim() === '') {\n      return toast.error('Please write something!');\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <Form onSubmit={onHandleSubmit}>\n      <Input\n        onChange={onHandleChange}\n        name=\"query\"\n        value={query}\n        type=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"Film name\"\n      />\n      <Btn type=\"submit\">Search</Btn>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  padding: 25px;\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n`;\n","import { OnSearchFilmListItem } from 'components/OnSearchFilmList/OnSearchFilmListItem';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { fetchOnSearch } from '../../FilmService';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Main, List } from './Movies.styled';\nimport { PageLoading } from 'components/PageLoading/PageLoading';\nimport { toast } from 'react-toastify';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieName = searchParams.get('query') ?? '';\n\n  const onSubmit = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    setFilms([]);\n    setLoading(true);\n    fetchOnSearch(movieName).then(data => {\n      console.log(data);\n      if (data.length === 0) {\n        setLoading(false);\n        return toast.error('There is no such films!');\n      }\n      setFilms(data);\n      setLoading(false);\n    });\n  }, [movieName]);\n\n  // const loadFilms = newData => {\n  //   setFilms(prevState => [...prevState, ...newData.results]);\n  // };\n\n  return (\n    <Main>\n      <SearchBar onSubmit={onSubmit} />\n      {loading && <PageLoading />}\n      <List>\n        {films.map(({ id, title }) => {\n          return (\n            <OnSearchFilmListItem\n              key={id}\n              id={id}\n              title={title}\n              state={{ from: location }}\n            />\n          );\n        })}\n      </List>\n    </Main>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","fetchTrendMovies","axios","response","data","results","fetchOnSearch","query","fetchFilmDetails","filmId","fetchFilmCast","cast","fetchFilmReviews","Item","styled","pr","theme","boxShadow","transition","color","accentColor","MovieLink","Link","OnSearchFilmListItem","id","title","state","to","Form","Input","Btn","SearchBar","onSubmit","useState","setQuery","evt","preventDefault","trim","toast","onChange","target","value","name","type","autoComplete","placeholder","Main","List","location","useLocation","loading","setLoading","films","setFilms","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","then","console","log","length","PageLoading","map","from"],"sourceRoot":""}